# 4948 : 베르트랑 공준
# https://www.acmicpc.net/problem/4948
# 시간 복잡도를 줄이기 위해서, 에라토스테네스의 체를 사용

while True:

    count = 0
    N = int(input()) 

    if N == 0 :
        break

    for i in range(N+1, 2*N+1): # N보다 크고, 2N보다 작거나 같은 숫자들에 대해서 연산
        if i == 1: # 1은 소수가 아니므로 가볍게 제외
            continue

        for j in range(2, int(i**0.5) + 1): # 모든 수를 보지 않고, 해당 수의 제곱근까지만 나눠본다.
            if i % j == 0: #약수가 존재하므로 소수가 아님
                break      #더이상 검사할 필요가 없으므로 멈춤
        else:
            count+=1 # 만약 나눠지지 않을 경우, 해당 수는 소수임!
    print(count)
            

"""
베르트랑 공준은 임의의 자연수 n에 대하여, n보다 크고, 2n보다 작거나 같은 소수는 적어도 하나 존재한다는 내용
예를 들어, 10보다 크고, 20보다 작거나 같은 소수는 4개
자연수 n이 주어졌을 때, n보다 크고, 2n보다 작거나 같은 소수의 개수를 구하는 프로그램을 작성하시오.

입력은 여러 개의 테스트 케이스
입력의 마지막에는 0이 주어진다.
"""